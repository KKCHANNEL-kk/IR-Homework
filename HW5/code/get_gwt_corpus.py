from email.quoprimime import quote
from time import sleep
from datetime import datetime
from bs4 import BeautifulSoup
import requests
import re
import pandas as pd
from urllib.parse import urlencode

header = {
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36',
    'cookie':'ihkYnttrQXfVO=5Q_YKTTQsUjISYAx0HbF2zfsAtvVjdrAmF1v5kRpvXPUfT0tZ_XkdvH7.aXmv1Hv9jQMCP6CZ2AQVtaTmR18.mA; ASPSESSIONIDQAQDSSSC=OEAPKABBLCEAENCKKHKNPCJP; ASPSESSIONIDQCSBTQTC=BGCNJMNBGJFJBKFILCNMIJMI; ASPSESSIONIDSCTCQRSD=FINNIIKCHIEIGCIKKMCCPECC; ASPSESSIONIDSCRCQTSD=HAFMGEHDGACAJEAELCPAJICM; ASPSESSIONIDSAQDTTSD=GMBGFAEAJFFJAGLPFJLOIHKG; ASPSESSIONIDQCRCSSTC=IKDLDMABAEMNHBBGMLEMMDPG; ASPSESSIONIDSAQBTSTC=ODFMCINBICHMOEOEACBJOHLD; ASPSESSIONIDASQDRQQA=JKFABEKCLJBHICJFPFKDOPGF; ASPSESSIONIDQARATSTC=DHAPPPGDIOOAGPOEAJPOOBMA; ASPSESSIONIDSCSBTTSC=LDHPNLDAMILKICCHANDEHMHD; ASPSESSIONIDSCSATTTD=HBGHMHABIKHFMGDFHEGPBNFD; ASPSESSIONIDCSQATQQB=IHJMLDNBPDDNOMHBGEEGAGMH; ASPSESSIONIDAQTCRQQB=FDCNJPJCBMBAMGKNNCINKDOK; ASPSESSIONIDQCSDSSSD=HJCJILGDDIBOANBFJIIJNEPK; ASPSESSIONIDCQTASRQB=ADFOGHDAIMDMIAKMLCAMFPHC; ASPSESSIONIDSCQDQSTC=ALOEGDABEDOKOEEAOEAJDMNG; ASPSESSIONIDQCQASSSC=FPPNEPMBFOHNJOCOGDMNMLOE; ASPSESSIONIDAQSAQRQB=FGKKCLJCCELIBOHOFELLOKOG; ASPSESSIONIDAQQAQRRA=NLGPAHGDCBHMBPKPDILNKDGI; ASPSESSIONIDCQTDRQQB=GMOMPCDAHLFCJOEANAGCEOOE; ASPSESSIONIDAQTAQRQA=IMMKOOPAHOALEMMKMKMINEEK; ASPSESSIONIDAQRBSRRB=HFHNMKMBPGMKHOENGLDKNFJG; ASPSESSIONIDSCSASTTD=ANMPLGJCDLIECOEBFAKNAGJP; ASPSESSIONIDCQTAQQQA=PEMOJCGDEMIPANOEHINAALCF; ASPSESSIONIDAQRBRQRA=EEJJJGGABKPPDJNAOBACECBL; ASPSESSIONIDAQQATQRB=BENPHCDBNDACDJGNPBEPCBIB; ASPSESSIONIDAQSBTQQA=HBLMGOPBEHJFNMDAIOHAJIDN; ASPSESSIONIDCQQDSRRA=FNKCFKMCPFFLIIEAEPOFBLPK; ASPSESSIONIDCSTARRRB=OMDPDGJDJOMOCDLMLEGDABHP; ASPSESSIONIDCSRBRQRA=MPHHCCGAKKDKHBBMOACOBCKA; ASPSESSIONIDQCQBQTTD=LDHPAOCBLCOOOBMCAHMHBKHA; ASPSESSIONIDCQSATQQA=CKNJPJPBDBIIGINIBJBKMBGL; ASPSESSIONIDQCSDTTSC=OKPPNFMCABCBOFJGKJGAJIIE; ASPSESSIONIDASRDRQQB=IMBENBJDLBCPMNFIEJPGBKOF; ASPSESSIONIDQCSDQTTD=POFMJJCBJDJACMPIJDJGGFIH; zg_did={"did": "17e61661af6485-0ec5d2ff049b8b-f791b31-1fa400-17e61661af7da3"}; zg_={"sid": 1642311588603,"updated": 1642311588607,"info": 1642311588605,"superProperty": "{}","platform": "{}","utm": "{}","referrerDomain": "ehall.szu.edu.cn","cuid": "2019274001"}; ASPSESSIONIDQATASSTD=NAJGIFPBICMAFPJPCFBEPOFM; ASPSESSIONIDQAQBTSSD=FBKFHBMCGEOGECGGFINHGAKI; ASPSESSIONIDAQTBSRRA=GKHFEJFALPFAIFPADGHGKDFL; ASPSESSIONIDCQSDTRQB=LKHADFCBJEIFJIJHDEILPMAP; ASPSESSIONIDQCTDQSSC=GDPCBBPBBKJIJPGFDDOHHHJH; ASPSESSIONIDASQCSRQA=DIKANEFAIHPHHEHIHFJOFIDF; ASPSESSIONIDQARBSSSC=HOJHLACBBDCCGAIHNLILMILL; ASPSESSIONIDAQQBQRQA=PMHCKMOBKKPFJIHAKBPNOHBP; ASPSESSIONIDCQTDSRQA=BOAIIILCJKAJHNAJLLJEAPMD; ASPSESSIONIDQCRBTSSD=MOBCHEIDEEPDECCBCKKBDECF; ASPSESSIONIDAQSARQRB=EFKPFAFACCKPOMCFACNPMGBK; ASPSESSIONIDAQRBQQQA=JOPNCIOBHJCJBOKLFKBJHCKD; ASPSESSIONIDSCSCSQTC=NFAFBELCBAAFKNJDIGLNJECC; UM_distinctid=17eca94c517f8-039ee5592dde41-f791539-144000-17eca94c518e04; ASPSESSIONIDCSQBQRRA=LEKNAAIDOMMGKAMBNLLPEPMN; ASPSESSIONIDSCRBSTSC=MHKHOLEAAKIBMLNJGGANPENI; ASPSESSIONIDCSSCTRQB=HDJHLDOBJGNGBBGPLMCFGFDK; ASPSESSIONIDCSTARQRA=GNGKEPNBGANMMGOJLBHJECPK; ASPSESSIONIDASQDTQRA=FKHJNNJCEJNBLGBJODNLFPCE; ASPSESSIONIDCSTBRTRB=OIICJBABNNBBEJGPIGOIGBHL; ASPSESSIONIDAQQCSQRA=FBJLHNMBPNIOGCOKIAOEPDME; ASPSESSIONIDQCQDRTTC=GLGFGJJCJCHKLAMENFCHGCOE; ASPSESSIONIDCQRBSRQA=AKNCMMCAFONEFMPFFDDLOMKL; ASPSESSIONIDCSTBSRQA=HKCNKIPAPMFGHCLALMKNDOHN; ASPSESSIONIDAQQBTQRA=PLCDBMICPOCMBBLNNEHLNPLI; ASPSESSIONIDCSSBRTRB=IOJKPHFDGGHPCKKHFFCBBHLC; ASPSESSIONIDCQRBQQQA=GOMBODCANMFICPAMGGLPHCHO; ASPSESSIONIDAQSCRTQB=ECJKGPBACOIGLIBFKGNDHMFO; ASPSESSIONIDCQSDSRRA=APIJBPEDGAFBBOIPBEOECBJN; ASPSESSIONIDAQRBQSRA=FLBMNFCBGJCDFFCCDMOKECBI; ASPSESSIONIDASQDRTRB=HDNCAAECOKPHFICOGOCBDNDC; ASPSESSIONIDCQRDSRRA=JMBDOLADFBFLCNNOGONMDBJG; ASPSESSIONIDCSRAQSQA=NKDJHBJDNMAFJCBIBPHEKJHA; ASPSESSIONIDASQBRTRA=EIKPFNFALIFPLGEDPBCPACFB; ASPSESSIONIDAQRATSQA=NEBHPCOAOOMCHFMCJDACDEBM; ASPSESSIONIDAQRASRQA=KHMNNOKBBDCJCNAELHKEDBJN; ASPSESSIONIDCSQASTQA=IPCHMKHCNPJLONLMIGJAALNO; ASPSESSIONIDCSRCSSQB=GIJKDNNCNGBJDDPIAEDOPIOA; ASPSESSIONIDCSSBQSRB=BDOPBJKDNMPOIAPCKJEPPJCP; ASPSESSIONIDCQSBRSQA=JLBBKKPAHDCAMOMCFCFJALOE; ASPSESSIONIDCSTDQQRB=MAKJDAIBHHOAACNOKBCJJEIK; ASPSESSIONIDASTCRRQB=JCNPBMECFDCANJKNAODHDAKF; ASPSESSIONIDAQRCSQQA=CIJLAIBDDDAIOBOPKABEHPGB; ASPSESSIONIDSATDTSTC=OHNHHKHDMOCICGDAGNNLKABE; ASPSESSIONIDQCRDTSTC=HOLPFGEABOPCBJGOMCEFONJF; ASPSESSIONIDCQRBQTQA=FONGPLMACNBFNOLFHAJIPMBG; ASPSESSIONIDCQQDQTRB=OAKONHJBIGJCHJIENHJJDBAJ; ASPSESSIONIDCSSCRRRA=LKKOHNBCHBBBFKJLKNDAJMMG; ASPSESSIONIDQAQDTSTC=LGDDGJOCKNJIMNDFPBHGEOFD; ASPSESSIONIDAQQCQRQB=MPEKEFLDIOIBOLLDDPHIPJJA; ASPSESSIONIDAQTDRSRA=GDNJMHBAPDLHCIFNGGGJFBKH; ASPSESSIONIDQCSCSTTC=IHDEDMKAKLOGKDKNNHFPNEMB; ASPSESSIONIDAQRATSRA=DDLJDJGBJKMAALAAIMMHFOAF; ASPSESSIONIDCSTCSQRA=LNMPBFDCCFMOLLCAPHFKGKDC; ASPSESSIONIDCQQCTRQA=GAMELKLCJGGAKDDEFAOMDBMM; ASPSESSIONIDASRDTSQB=MIAPJGIDAANKKCCFEJBPJCAD; _webvpn_key=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiMjAxOTI3NDAwMSIsImdyb3VwcyI6WzE1XSwiaWF0IjoxNjUyNTUzNjQxLCJleHAiOjE2NTI2NDAwNDF9.thUM3Smo8sWNOEiNGxPjEEeSWhyetWmMjcMFCoFUzTo; webvpn_username=2019274001|1652553641|8cd3ec0d4a95a92eddff276fef9a650a0024db76; ASPSESSIONIDAQSBRQRA=JOIGICFAODPFBDFMFHCBILML; ASPSESSIONIDAQTBTRQB=HAKHPELANPCAMHBDDKPBEPIP; ASPSESSIONIDASSDRTRA=KGJONAIBCIBDGEKIGKPOAKLA; ASPSESSIONIDCQTDSSRA=OMEIHGACIAADOIPABBAEBFOL; ASPSESSIONIDASRBRQTB=APPDHCNCGNELJLDGGKADANCI; ASPSESSIONIDCQSDTSRB=CGFMPHFDOPIPJPAKGIIDCODI; ASPSESSIONIDAQRCSTRB=HPBPODCAGBAEOFIOCPODKDPE; ASPSESSIONIDCSRDRTRA=LNMIMPOAILLFPHBKAMLMBIPF; ASPSESSIONIDCSRCSQRB=JONFDCFBNPDFIFNOFOKJAJBM; ASPSESSIONIDASSBQSRB=NKLOBOBCBBCPJMPCFAPBAFGO',
    'content-type': 'application/x-www-form-urlencoded',
    'origin': 'https://www1.szu.edu.cn',
    'referer': 'https://www1.szu.edu.cn/board/infolist.asp?'
}



def get_dep_list(department):
    base_url = 'https://www1.szu.edu.cn/board/infolist.asp?'
    df = pd.DataFrame(
        columns=['department', 'title', 'url', 'no', 'timestamp'])
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    params = {'dayy': 2021, 'from_username': department.encode('GB2312'),'keyword':'','searchb1': '搜索'.encode('GB2312')}
    # data = urlencode(params)
    # print(data)
    response = requests.post(base_url, data=params,verify=False)
    soup = BeautifulSoup(response.content, 'html.parser')
    table = soup.select('body > table > tr:nth-of-type(2) > td > table > tr:nth-of-type(3) > td > table > tr:nth-of-type(3) > td > table > tr')[2:]
    for tr in table:
        td = tr.find_all('td')
        no = td[0].get_text()
        dep = td[2].get_text()
        title = td[3].select('a')[0].get_text()
        url = td[3].select('a')[0].get('href')
        tr_col = {'department': dep, 'title': title,
                  'url': url, 'no': no, 'timestamp': timestamp}
        # print(tr_col)
        df = df.append(tr_col, ignore_index=True)

    return df

def get_gwt_corpus(url_list):
    base_url = 'https://www1.szu.edu.cn/board/'
    gwt_info =pd.DataFrame(columns=['title','time','department','content','no','url','timestamp'])
    dep_cnt = {'党政办公室':0,'教务部':0,'招生办公室':0,'研究生院':0,'科学技术部':0}
    for pa in url_list:
        url = base_url + pa
        print('url:' + url)
        
        response = requests.get(url,verify=False)
        response.encoding = 'gbk'

        soup = BeautifulSoup(response.text, 'html.parser')
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        table = soup.select('body > table > tr:nth-of-type(2) > td > table > tr:nth-of-type(3) > td > table > tr:nth-of-type(2) > td > table > tr')
        title = table[0].get_text().strip()
        department = table[1].get_text().strip().split('\u3000')[0]
        time = table[1].get_text().strip().split('\u3000')[1]
        content = table[2].get_text().strip().replace('\u3000',' ').replace('\xa0',' ')
        no = dep_cnt[department]
        dep_cnt[department] = dep_cnt[department] + 1
        gwt_col = {'title':title,'time':time,'department':department,'content':content,'no':no,'url':url,'timestamp':timestamp}
        # print(gwt_col)
        gwt_info = gwt_info.append(gwt_col,ignore_index=True)
    return gwt_info


if __name__ == '__main__':
    dep_name = ['党政办公室','教务部','招生办公室','研究生院','科学技术部']
    dep_list = pd.DataFrame(columns=['department', 'title', 'url', 'no', 'timestamp'])
    for name in dep_name:
        dep_list = dep_list.append(get_dep_list(name), ignore_index=True)
    
    gwt_info = get_gwt_corpus(dep_list['url'])
    gwt_info.to_csv('data/gwt_info.csv',index=False,encoding='utf-8-sig')
    